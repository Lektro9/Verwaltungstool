[{"/home/florian/Projects/Projects_HHEK/Verwaltungstool/AppGateway/Frontend/src/index.js":"1","/home/florian/Projects/Projects_HHEK/Verwaltungstool/AppGateway/Frontend/src/reportWebVitals.js":"2","/home/florian/Projects/Projects_HHEK/Verwaltungstool/AppGateway/Frontend/src/RouteDefs.js":"3","/home/florian/Projects/Projects_HHEK/Verwaltungstool/AppGateway/Frontend/src/components/MannProvider.js":"4","/home/florian/Projects/Projects_HHEK/Verwaltungstool/AppGateway/Frontend/src/pages/LoginPage.js":"5","/home/florian/Projects/Projects_HHEK/Verwaltungstool/AppGateway/Frontend/src/components/AuthProvider.js":"6","/home/florian/Projects/Projects_HHEK/Verwaltungstool/AppGateway/Frontend/src/components/PrivateRoute.js":"7","/home/florian/Projects/Projects_HHEK/Verwaltungstool/AppGateway/Frontend/src/components/PersProvider.js":"8","/home/florian/Projects/Projects_HHEK/Verwaltungstool/AppGateway/Frontend/src/pages/UserCreationPage.js":"9","/home/florian/Projects/Projects_HHEK/Verwaltungstool/AppGateway/Frontend/src/components/AuthButton.js":"10","/home/florian/Projects/Projects_HHEK/Verwaltungstool/AppGateway/Frontend/src/pages/PersonenVerwaltung/PersonenVerwaltungsPage.js":"11","/home/florian/Projects/Projects_HHEK/Verwaltungstool/AppGateway/Frontend/src/components/TurnierProvider.js":"12","/home/florian/Projects/Projects_HHEK/Verwaltungstool/AppGateway/Frontend/src/pages/MannschaftsVerwaltung/MannschaftsVerwaltungsPage.js":"13","/home/florian/Projects/Projects_HHEK/Verwaltungstool/AppGateway/Frontend/src/pages/TurnierVerwaltung/TurnierVerwaltungsPage.js":"14","/home/florian/Projects/Projects_HHEK/Verwaltungstool/AppGateway/Frontend/src/pages/PersonenVerwaltung/dataTablePerson.js":"15","/home/florian/Projects/Projects_HHEK/Verwaltungstool/AppGateway/Frontend/src/pages/PersonenVerwaltung/addPerson.js":"16","/home/florian/Projects/Projects_HHEK/Verwaltungstool/AppGateway/Frontend/src/pages/TurnierVerwaltung/createTurnierModal.js":"17","/home/florian/Projects/Projects_HHEK/Verwaltungstool/AppGateway/Frontend/src/pages/MannschaftsVerwaltung/addMannschaftModal.js":"18","/home/florian/Projects/Projects_HHEK/Verwaltungstool/AppGateway/Frontend/src/components/ChoosingTable.js":"19","/home/florian/Projects/Projects_HHEK/Verwaltungstool/AppGateway/Frontend/src/pages/TurnierVerwaltung/selectTeamsAndPoints.js":"20","/home/florian/Projects/Projects_HHEK/Verwaltungstool/AppGateway/Frontend/src/hooks/useAuth.js":"21","/home/florian/Projects/Projects_HHEK/Verwaltungstool/AppGateway/Frontend/src/hooks/useMannschaft.js":"22","/home/florian/Projects/Projects_HHEK/Verwaltungstool/AppGateway/Frontend/src/hooks/usePerson.js":"23","/home/florian/Projects/Projects_HHEK/Verwaltungstool/AppGateway/Frontend/src/hooks/useTurnier.js":"24","/home/florian/Projects/Projects_HHEK/Verwaltungstool/AppGateway/Frontend/src/components/personCrud.js":"25","/home/florian/Projects/Projects_HHEK/Verwaltungstool/AppGateway/Frontend/src/pages/PersonenVerwaltung/editPerson.js":"26","/home/florian/Projects/Projects_HHEK/Verwaltungstool/AppGateway/Frontend/src/pages/PersonenVerwaltung/addPersonComps/createPersonModal.js":"27","/home/florian/Projects/Projects_HHEK/Verwaltungstool/AppGateway/Frontend/src/pages/PersonenVerwaltung/addPersonComps/overviewPersonData.js":"28","/home/florian/Projects/Projects_HHEK/Verwaltungstool/AppGateway/Frontend/src/pages/PersonenVerwaltung/addPersonComps/formPersonSpecific.js":"29","/home/florian/Projects/Projects_HHEK/Verwaltungstool/AppGateway/Frontend/src/pages/PersonenVerwaltung/addPersonComps/formPersonGeneral.js":"30","/home/florian/Projects/Projects_HHEK/Verwaltungstool/AppGateway/Frontend/src/pages/PersonenVerwaltung/editPersonComps/createPersonModal.js":"31"},{"size":518,"mtime":1611310676499,"results":"32","hashOfConfig":"33"},{"size":362,"mtime":1611310676499,"results":"34","hashOfConfig":"33"},{"size":4015,"mtime":1612891363208,"results":"35","hashOfConfig":"33"},{"size":853,"mtime":1612349813201,"results":"36","hashOfConfig":"33"},{"size":2910,"mtime":1612891363212,"results":"37","hashOfConfig":"33"},{"size":1557,"mtime":1612891363212,"results":"38","hashOfConfig":"33"},{"size":530,"mtime":1611821983130,"results":"39","hashOfConfig":"33"},{"size":456,"mtime":1612963921519,"results":"40","hashOfConfig":"33"},{"size":2688,"mtime":1612891363212,"results":"41","hashOfConfig":"33"},{"size":926,"mtime":1612891363212,"results":"42","hashOfConfig":"33"},{"size":1838,"mtime":1612963921519,"results":"43","hashOfConfig":"33"},{"size":1318,"mtime":1612857729652,"results":"44","hashOfConfig":"33"},{"size":6968,"mtime":1612891363212,"results":"45","hashOfConfig":"33"},{"size":11507,"mtime":1612891363212,"results":"46","hashOfConfig":"33"},{"size":3315,"mtime":1612963964312,"results":"47","hashOfConfig":"33"},{"size":678,"mtime":1612808458003,"results":"48","hashOfConfig":"33"},{"size":794,"mtime":1612770850701,"results":"49","hashOfConfig":"33"},{"size":3652,"mtime":1612891363212,"results":"50","hashOfConfig":"33"},{"size":2308,"mtime":1612770850697,"results":"51","hashOfConfig":"33"},{"size":3009,"mtime":1612891363212,"results":"52","hashOfConfig":"33"},{"size":158,"mtime":1611821983130,"results":"53","hashOfConfig":"33"},{"size":90,"mtime":1612349813201,"results":"54","hashOfConfig":"33"},{"size":85,"mtime":1612349813201,"results":"55","hashOfConfig":"33"},{"size":86,"mtime":1612349813201,"results":"56","hashOfConfig":"33"},{"size":807,"mtime":1612958234697,"results":"57","hashOfConfig":"33"},{"size":706,"mtime":1612887298074,"results":"58","hashOfConfig":"33"},{"size":4618,"mtime":1612963921523,"results":"59","hashOfConfig":"33"},{"size":546,"mtime":1612807745041,"results":"60","hashOfConfig":"33"},{"size":2548,"mtime":1612805620305,"results":"61","hashOfConfig":"33"},{"size":2235,"mtime":1612807721905,"results":"62","hashOfConfig":"33"},{"size":8966,"mtime":1612964097854,"results":"63","hashOfConfig":"33"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},"1yemc85",{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"66"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"66"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"66"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"66"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"66"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/florian/Projects/Projects_HHEK/Verwaltungstool/AppGateway/Frontend/src/index.js",[],["132","133"],"/home/florian/Projects/Projects_HHEK/Verwaltungstool/AppGateway/Frontend/src/reportWebVitals.js",[],"/home/florian/Projects/Projects_HHEK/Verwaltungstool/AppGateway/Frontend/src/RouteDefs.js",[],"/home/florian/Projects/Projects_HHEK/Verwaltungstool/AppGateway/Frontend/src/components/MannProvider.js",[],"/home/florian/Projects/Projects_HHEK/Verwaltungstool/AppGateway/Frontend/src/pages/LoginPage.js",[],"/home/florian/Projects/Projects_HHEK/Verwaltungstool/AppGateway/Frontend/src/components/AuthProvider.js",[],"/home/florian/Projects/Projects_HHEK/Verwaltungstool/AppGateway/Frontend/src/components/PrivateRoute.js",[],"/home/florian/Projects/Projects_HHEK/Verwaltungstool/AppGateway/Frontend/src/components/PersProvider.js",["134","135"],"import React, { useState, useEffect } from \"react\";\nimport { usePersons } from \"../hooks/usePerson\";\n\nexport const PersProvider = (props) => {\n  const setPersons = (PersonArr) => {\n    setState({ ...state, persons: PersonArr });\n  };\n\n\n  const initState = {\n    persons: [],\n    setPersons: setPersons,\n  };\n\n  const [state, setState] = useState(initState);\n\n  return (\n    <usePersons.Provider value={state}>{props.children}</usePersons.Provider>\n  );\n};\n","/home/florian/Projects/Projects_HHEK/Verwaltungstool/AppGateway/Frontend/src/pages/UserCreationPage.js",[],"/home/florian/Projects/Projects_HHEK/Verwaltungstool/AppGateway/Frontend/src/components/AuthButton.js",[],"/home/florian/Projects/Projects_HHEK/Verwaltungstool/AppGateway/Frontend/src/pages/PersonenVerwaltung/PersonenVerwaltungsPage.js",["136"],"import { useContext, useEffect, useState } from \"react\";\n\n/*---Material---*/\nimport { Button } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n/*---Components---*/\nimport DataTablePerson from \"./dataTablePerson\";\nimport AddPerson from \"./addPerson\";\nimport { useAuth } from \"../../hooks/useAuth\";\nimport { usePersons } from \"../../hooks/usePerson\";\nimport axios from \"axios\";\n\nconst useStyles = makeStyles({\n  root: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    flexDirection: \"column\",\n    alignItems: \"center\"\n  },\n  buttons: {\n    marginBottom: \"1em\"\n  }\n});\n\nconst BASE_URL_PERSONEN = process.env.BASE_URL_PERSONEN || \"http://localhost:3004/api/v1/personenverwaltung/persons/\";\n\nexport const PersonenVeraltungsPage = () => {\n  const authState = useContext(useAuth);\n  const classes = useStyles();\n  const [open, setOpen] = useState(false);\n  const PersonState = useContext(usePersons);\n\n  useEffect(() => {\n    console.log(authState)\n    axios.defaults.headers.common['Authorization'] = 'Bearer ' + authState.accessToken; // for all requests\n    axios\n      .get(BASE_URL_PERSONEN)\n      .then((response) => {\n        PersonState.setPersons(response.data);\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n  }, [authState]);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <div className={classes.root}>\n      <h2>Personenverwaltung</h2>\n      {authState.user.role ? <div className={classes.buttons}>\n        <Button variant=\"contained\" color=\"primary\" onClick={handleClickOpen}>\n          Person Erstellen\n        </Button>\n      </div> : ''}\n\n      <DataTablePerson />\n      {/* DialogWindow */}\n      <AddPerson onClick={handleClose} dialogState={open} />\n    </div>\n  );\n};\n","/home/florian/Projects/Projects_HHEK/Verwaltungstool/AppGateway/Frontend/src/components/TurnierProvider.js",[],"/home/florian/Projects/Projects_HHEK/Verwaltungstool/AppGateway/Frontend/src/pages/MannschaftsVerwaltung/MannschaftsVerwaltungsPage.js",[],"/home/florian/Projects/Projects_HHEK/Verwaltungstool/AppGateway/Frontend/src/pages/TurnierVerwaltung/TurnierVerwaltungsPage.js",["137"],"import {\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  Container,\n  Dialog,\n  DialogContent,\n  DialogTitle,\n  Divider,\n  Paper,\n  Typography,\n} from '@material-ui/core';\nimport { useContext, useState, useEffect } from 'react';\nimport { ChoosingTable } from '../../components/ChoosingTable';\nimport { useMannschaften } from '../../hooks/useMannschaft';\nimport { useTurniere } from '../../hooks/useTurnier';\nimport { CreateTurnierModal } from './createTurnierModal';\nimport { SelectTeamsAndPoints } from './selectTeamsAndPoints';\nimport axios from 'axios';\nimport { useAuth } from '../../hooks/useAuth';\n\nconst BASE_URL_TURNIER = \"http://localhost:3007\";\nconst BASE_URL_MANNSCHAFTEN = \"http://localhost:3006\";\n\nexport const TurnierVerwaltungsPage = () => {\n  const authState = useContext(useAuth);\n  const TurniereState = useContext(useTurniere);\n  const MannschaftenState = useContext(useMannschaften);\n  const [open, setOpen] = useState(false);\n  const [turnierRemoveMannModals, setTurnierRemoveMannModals] = useState(\n    TurniereState.turniere.reduce((accumulator, currentValue) => {\n      return { ...accumulator, [currentValue.id]: false };\n    }, {})\n  );\n  const [turnierAddMannModals, setTurnierAddMannModals] = useState(\n    TurniereState.turniere.reduce((accumulator, currentValue) => {\n      return { ...accumulator, [currentValue.id]: false };\n    }, {})\n  );\n\n  // Daten werden einmal beim Aufruf der Seite geholt\n  useEffect(() => {\n    axios\n      .get(BASE_URL_MANNSCHAFTEN + '/getMannschaften')\n      .then(function (response) {\n        MannschaftenState.setMannschaften(response.data);\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n    axios\n      .get(BASE_URL_TURNIER + '/getTurniere')\n      .then(function (response) {\n        TurniereState.setTurniere([...response.data]);\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  // update the boolean collection object so modal booleans are tracked correctly\n  useEffect(() => {\n    setTurnierRemoveMannModals(TurniereState.turniere.reduce((accumulator, currentValue) => {\n      return { ...accumulator, [currentValue.id]: false };\n    }, {}))\n    setTurnierAddMannModals(TurniereState.turniere.reduce((accumulator, currentValue) => {\n      return { ...accumulator, [currentValue.id]: false };\n    }, {}))\n  }, [TurniereState.turniere])\n\n  const getTeamName = (teamId) => {\n    const teamName = MannschaftenState.mannschaften.find(\n      (team) => team.id === teamId\n    )?.name;\n    return teamName || 'Team not Found';\n  };\n  const getTeamsFromIds = (teilnehmer) => {\n    const teamsInTourney = [];\n    if (teilnehmer && teilnehmer.length > 0) {\n      teilnehmer.forEach((team) => {\n        MannschaftenState.mannschaften.forEach((mannschaft) => {\n\n          if (mannschaft.id === team.mannschaftID) {\n            teamsInTourney.push(mannschaft);\n          }\n        });\n      });\n    }\n    return teamsInTourney;\n  };\n  const addTurnier = (newTurnier) => {\n    axios\n      .post(BASE_URL_TURNIER + '/createTurnier', newTurnier)\n      .then(function (response) {\n        TurniereState.setTurniere([\n          ...TurniereState.turniere,\n          response.data,\n        ]);\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n    TurniereState.setTurniere([newTurnier, ...TurniereState.turniere]);\n  };\n  const deleteTurnier = (turnier) => {\n    axios\n      .delete(BASE_URL_TURNIER + '/deleteTurnier/' + turnier.id)\n      .then(function (response) {\n        const indexOfGame = TurniereState.turniere.indexOf(turnier);\n        if (indexOfGame > -1) {\n          TurniereState.turniere.splice(indexOfGame, 1);\n        }\n        TurniereState.setTurniere([...TurniereState.turniere]);\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const addGame = (game) => {\n    axios\n      .post(BASE_URL_TURNIER + '/addSpielToTurnier', { turnierID: game.turnierId, game: game })\n      .then(function (response) {\n        const turnier = TurniereState.turniere.find(\n          (turnier) => turnier.id === response.data.id\n        );\n        turnier.games = response.data.games;\n\n        TurniereState.setTurniere([...TurniereState.turniere]);\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n  };\n\n  const removeTeamsFromTurnier = (\n    teamIds,\n    teamsAlreadyInTurnier = [],\n    turnier\n  ) => {\n    axios\n      .delete(BASE_URL_TURNIER + '/removeTeilnehmerFromTurnier', { data: { turnierID: turnier.id, teilnehmerIDs: teamIds } })\n      .then(function (response) {\n        turnier.teilnehmer = response.data.teilnehmer\n        turnier.games = response.data.games\n        TurniereState.setTurniere([\n          ...TurniereState.turniere\n        ]);\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n  };\n\n  const addTeamsToTurnier = (\n    selectedTeamIds,\n    teamsAlreadyInTurnier = [],\n    turnier = {}\n  ) => {\n\n    //find duplicates, so they won't be added twice\n    const teamsIdsAlreadyInTurnier = [];\n    teamsAlreadyInTurnier.forEach((teamInTurnier) => {\n      selectedTeamIds.forEach((teamId) => {\n        if (teamInTurnier.mannschaftID === teamId) {\n          teamsIdsAlreadyInTurnier.push(teamInTurnier.mannschaftID)\n        }\n      })\n    })\n    const teamIdsNotInTurnier = selectedTeamIds.filter(\n      (teamId) => {\n        if (!teamsIdsAlreadyInTurnier.includes(teamId)) {\n          return teamId\n        }\n      }\n    );\n\n    axios\n      .post(BASE_URL_TURNIER + '/addTeilnehmerToTurnier', { turnierID: turnier.id, teilnehmerIDs: teamIdsNotInTurnier })\n      .then(function (response) {\n        turnier.teilnehmer = response.data.teilnehmer\n        TurniereState.setTurniere([\n          ...TurniereState.turniere\n        ]);\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n  };\n\n  const openAddTeam = (turnierId) => {\n    turnierAddMannModals[turnierId] = true;\n    setTurnierAddMannModals({ ...turnierAddMannModals });\n  };\n\n  const openRemoveTeam = (turnierId) => {\n    turnierRemoveMannModals[turnierId] = true;\n    setTurnierRemoveMannModals({ ...turnierRemoveMannModals });\n  };\n\n  const closeAddTeam = (turnierId) => {\n    turnierAddMannModals[turnierId] = false;\n    setTurnierAddMannModals({ ...turnierAddMannModals });\n  };\n  const closeRemoveTeam = (turnierId) => {\n    turnierRemoveMannModals[turnierId] = false;\n    setTurnierRemoveMannModals({ ...turnierRemoveMannModals });\n  };\n  const deleteGame = (turnier, game) => {\n    axios\n      .delete(BASE_URL_TURNIER + '/removeSpielFromTurnier/' + game.id)\n      .then(function (response) {\n        const indexOfGame = turnier.games.indexOf(game);\n        if (indexOfGame > -1) {\n          turnier.games.splice(indexOfGame, 1);\n        }\n        TurniereState.setTurniere([...TurniereState.turniere]);\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n  };\n\n  return (\n    <>\n      {authState.user.role ? <Button\n        variant='outlined'\n        color='primary'\n        onClick={() => {\n          setOpen(true);\n        }}\n      >\n        Turnier hinzufügen\n      </Button> : ''}\n      <Dialog open={open} onClose={handleClose}>\n        <DialogTitle id='createTurnier' onClose={handleClose}>\n          Turnier hinzufügen\n        </DialogTitle>\n        <DialogContent>\n          <CreateTurnierModal addTurnier={addTurnier} />\n        </DialogContent>\n      </Dialog>\n      <Container maxWidth='md'>\n        {TurniereState.turniere.map((turnier) => (\n          <Card style={{ width: '100%', margin: 10 }} key={turnier.id}>\n            <CardContent>\n              <Typography gutterBottom variant='h5' component='h2'>\n                {turnier.name}\n              </Typography>\n              {authState.user.role ? <>\n                <Button\n                  size='small'\n                  color='primary'\n                  onClick={() => {\n                    openAddTeam(turnier.id);\n                  }}\n                >\n                  Mannschaften hinzufügen\n                </Button>\n                <Button\n                  size='small'\n                  color='secondary'\n                  onClick={() => {\n                    openRemoveTeam(turnier.id);\n                  }}\n                >\n\n                  Mannschaften entfernen\n              </Button>\n              </> : ''}\n              {turnier.games.map((game) => (\n                <div style={{ display: 'flex' }} key={game.id}>\n                  <Paper\n                    elevation={1}\n                    style={{\n                      padding: 10,\n                      margin: 10,\n                      flexBasis: 0,\n                      flexGrow: 1,\n                      textAlign: 'center',\n                    }}\n                  >\n                    {getTeamName(game.team1Id)} - {game.team1Punkte}\n                  </Paper>\n                  <Paper\n                    elevation={1}\n                    style={{\n                      padding: 10,\n                      margin: 10,\n                      flexBasis: 0,\n                      flexGrow: 1,\n                      textAlign: 'center',\n                    }}\n                  >\n                    {game.team2Punkte} - {getTeamName(game.team2Id)}\n                  </Paper>\n                  {authState.user.role ? <Button\n                    style={{ height: '40%', marginTop: 15 }}\n                    size='small'\n                    variant='contained'\n                    color='secondary'\n                    onClick={() => {\n                      deleteGame(turnier, game);\n                    }}\n                  >\n                    X\n                  </Button> : ''}\n                </div>\n              ))}\n              <Divider style={{ marginTop: 20 }} />\n              {authState.user.role ? <SelectTeamsAndPoints turnier={turnier} addGame={addGame} /> : ''}\n            </CardContent>\n            {authState.user.role ? <CardActions>\n              <Button\n                size='small'\n                color='secondary'\n                onClick={() => {\n                  deleteTurnier(turnier);\n                }}\n              >\n                Turnier Löschen\n              </Button>\n            </CardActions> : ''}\n            <Dialog\n              open={turnierRemoveMannModals[turnier.id]}\n              onClose={() => {\n                closeRemoveTeam(turnier.id);\n              }}\n            >\n              <ChoosingTable\n                title={'Mannschaften entfernen'}\n                teams={getTeamsFromIds(turnier.teilnehmer)}\n                action={removeTeamsFromTurnier}\n                turnier={turnier}\n                buttonInfo={['secondary', 'entfernen']}\n              />\n            </Dialog>\n            <Dialog\n              open={turnierAddMannModals[turnier.id]}\n              onClose={() => {\n                closeAddTeam(turnier.id);\n              }}\n            >\n              <ChoosingTable\n                title={'Mannschaften hinzufügen'}\n                teams={MannschaftenState.mannschaften}\n                teamsAlreadyInTurnier={turnier.teilnehmer}\n                action={addTeamsToTurnier}\n                turnier={turnier}\n                buttonInfo={['primary', 'hinzufügen']}\n              />\n            </Dialog>\n          </Card>\n        ))}\n      </Container>\n    </>\n  );\n};\n","/home/florian/Projects/Projects_HHEK/Verwaltungstool/AppGateway/Frontend/src/pages/PersonenVerwaltung/dataTablePerson.js",["138","139"],"import React, { useState, useContext, useEffect } from \"react\";\nimport axios from \"axios\";\n\n/*---Material---*/\nimport { Container } from \"@material-ui/core\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport { DataGrid } from \"@material-ui/data-grid\";\nimport { usePersons } from \"../../hooks/usePerson\";\n\nimport { deletePerson } from \"../../components/personCrud\";\nimport EditPerson from \"./editPerson\";\nimport { useAuth } from \"../../hooks/useAuth\";\nconst BASE_URL_PERSONEN = process.env.BASE_URL_PERSONEN || \"http://localhost:3004/api/v1/personenverwaltung/persons/\";\n\nconst DataTablePerson = () => {\n  const authState = useContext(useAuth);\n  const PersonState = useContext(usePersons);\n\n  const [open, setOpen] = useState(false);\n  const [personId, setPersonId] = useState(0);\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const columns = [\n    { field: \"id\", headerName: \"ID\", width: 70 },\n    { field: \"type\", headerName: \"Type\", width: 130 },\n    { field: \"firstName\", headerName: \"Vorname\", width: 130 },\n    { field: \"lastName\", headerName: \"Nachname\", width: 130 },\n    {\n      field: \"birthday\",\n      headerName: \"Geburtstag\",\n      type: \"date\",\n      width: 150,\n      valueFormatter: (params) => new Date(params.value).toLocaleDateString(),\n    },\n    {\n      field: \"fullName\",\n      headerName: \"Full name\",\n      description: \"This column has a value getter and is not sortable.\",\n      sortable: false,\n      width: 180,\n      valueGetter: (params) =>\n        `${params.getValue(\"firstName\") || \"\"} ${params.getValue(\"lastName\") || \"\"\n        }`,\n    },\n    {\n      field: \"delete\",\n      headerName: \"Löschen\",\n\n      renderCell: (params) => {\n        if (authState.user.role) {\n          return (\n            <IconButton\n              aria-label=\"delete\"\n              onClick={() => {\n                deletePer(params.getValue(\"id\"));\n              }}\n            >\n              <DeleteIcon />\n            </IconButton>\n          );\n        }\n      },\n    },\n    {\n      field: \"edit\",\n      headerName: \"Editieren\",\n\n      renderCell: (params) => {\n        if (authState.user.role) {\n          return (\n            <IconButton\n              aria-label=\"edit\"\n              onClick={() => {\n                editPer(params.getValue(\"id\"));\n              }}\n            >\n              <EditIcon />\n            </IconButton>\n          );\n        }\n      },\n    },\n  ];\n\n  const deletePer = (id) => {\n    axios\n      .delete(BASE_URL_PERSONEN + id)\n      .then(() => {\n        PersonState.setPersons(\n          PersonState.persons.filter((person) => person.id !== id)\n        );\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n\n  const editPer = (id) => {\n    setPersonId(id);\n    setOpen(true);\n  };\n\n  return (\n    <Container>\n      <div\n        style={{\n          width: \"100%\",\n          height: 500,\n        }}\n      >\n        <DataGrid rows={PersonState.persons} columns={columns} pageSize={10} />\n      </div>\n      <EditPerson\n        onClick={handleClose}\n        dialogState={open}\n        person={PersonState.persons.filter((person) => person.id === personId)}\n      />\n    </Container>\n  );\n};\n\nexport default DataTablePerson;\n","/home/florian/Projects/Projects_HHEK/Verwaltungstool/AppGateway/Frontend/src/pages/PersonenVerwaltung/addPerson.js",[],"/home/florian/Projects/Projects_HHEK/Verwaltungstool/AppGateway/Frontend/src/pages/TurnierVerwaltung/createTurnierModal.js",[],"/home/florian/Projects/Projects_HHEK/Verwaltungstool/AppGateway/Frontend/src/pages/MannschaftsVerwaltung/addMannschaftModal.js",[],"/home/florian/Projects/Projects_HHEK/Verwaltungstool/AppGateway/Frontend/src/components/ChoosingTable.js",[],"/home/florian/Projects/Projects_HHEK/Verwaltungstool/AppGateway/Frontend/src/pages/TurnierVerwaltung/selectTeamsAndPoints.js",["140","141"],"import {\n  Button,\n  FormControl,\n  InputLabel,\n  MenuItem,\n  Select,\n  TextField,\n} from '@material-ui/core';\nimport { useContext, useState } from 'react';\nimport { useMannschaften } from '../../hooks/useMannschaft';\n\nexport const SelectTeamsAndPoints = (props) => {\n  //this should only be the teams playing in the tourney\n  const MannschaftenState = useContext(useMannschaften);\n\n  const teamsInTournament = () => {\n    const teamsInTournament = []\n    props.turnier?.teilnehmer?.map((teilnehmerTeam) => {\n      const returnTeam = MannschaftenState.mannschaften.find((team) => {\n        if (team.id === teilnehmerTeam.mannschaftID) {\n          return team;\n        }\n      });\n      if (returnTeam)\n        teamsInTournament.push(returnTeam)\n    });\n    return (teamsInTournament)\n  }\n  const [team1Id, setTeam1Id] = useState(\"\");\n  const [team1Points, setTeam1Points] = useState(0);\n  const [team2Id, setTeam2Id] = useState(\"\");\n  const [team2Points, setTeam2Points] = useState(0);\n  return (\n    <>\n      <FormControl style={{ width: '35%' }}>\n        <InputLabel id='team1'>Team 1</InputLabel>\n        <Select\n          labelId='team1'\n          id='simple-team1'\n          value={team1Id}\n          onChange={(event) => {\n            setTeam1Id(event.target.value);\n          }}\n        >\n          {teamsInTournament().length > 0 && teamsInTournament().map((team) => {\n            return (\n              <MenuItem value={team.id} key={team.id}>\n                {team.name}\n              </MenuItem>\n            );\n          })}\n        </Select>\n      </FormControl>\n      <TextField\n        style={{ width: '5%', marginLeft: 10 }}\n        id='standard-number'\n        label='Pts'\n        type='number'\n        onChange={(event) => {\n          setTeam1Points(event.target.value);\n        }}\n      />\n      <TextField\n        style={{ width: '5%', marginLeft: 40 }}\n        id='standard-number'\n        label='Pts'\n        type='number'\n        onChange={(event) => {\n          setTeam2Points(event.target.value);\n        }}\n      />\n      <FormControl style={{ width: '35%', marginLeft: 10 }}>\n        <InputLabel id='team2'>Team 2</InputLabel>\n        <Select\n          labelId='team2'\n          id='simple-team2'\n          value={team2Id}\n          onChange={(event) => {\n            setTeam2Id(event.target.value);\n          }}\n        >\n          {teamsInTournament().length > 0 && teamsInTournament().map((team) => {\n            return (\n              <MenuItem value={team.id} key={team.id}>\n                {team.name}\n              </MenuItem>\n            );\n          })}\n        </Select>\n      </FormControl>\n      <Button\n        color='primary'\n        onClick={() => {\n          props.addGame({\n            id: Math.floor(Math.random() * 1000),\n            turnierId: props.turnier.id,\n            team1Id,\n            team1Punkte: team1Points,\n            team2Id,\n            team2Punkte: team2Points,\n          });\n        }}\n      >\n        add Match\n      </Button>\n    </>\n  );\n};\n","/home/florian/Projects/Projects_HHEK/Verwaltungstool/AppGateway/Frontend/src/hooks/useAuth.js",[],"/home/florian/Projects/Projects_HHEK/Verwaltungstool/AppGateway/Frontend/src/hooks/useMannschaft.js",[],"/home/florian/Projects/Projects_HHEK/Verwaltungstool/AppGateway/Frontend/src/hooks/usePerson.js",[],"/home/florian/Projects/Projects_HHEK/Verwaltungstool/AppGateway/Frontend/src/hooks/useTurnier.js",[],"/home/florian/Projects/Projects_HHEK/Verwaltungstool/AppGateway/Frontend/src/components/personCrud.js",[],"/home/florian/Projects/Projects_HHEK/Verwaltungstool/AppGateway/Frontend/src/pages/PersonenVerwaltung/editPerson.js",[],"/home/florian/Projects/Projects_HHEK/Verwaltungstool/AppGateway/Frontend/src/pages/PersonenVerwaltung/addPersonComps/createPersonModal.js",[],"/home/florian/Projects/Projects_HHEK/Verwaltungstool/AppGateway/Frontend/src/pages/PersonenVerwaltung/addPersonComps/overviewPersonData.js",[],"/home/florian/Projects/Projects_HHEK/Verwaltungstool/AppGateway/Frontend/src/pages/PersonenVerwaltung/addPersonComps/formPersonSpecific.js",[],"/home/florian/Projects/Projects_HHEK/Verwaltungstool/AppGateway/Frontend/src/pages/PersonenVerwaltung/addPersonComps/formPersonGeneral.js",[],"/home/florian/Projects/Projects_HHEK/Verwaltungstool/AppGateway/Frontend/src/pages/PersonenVerwaltung/editPersonComps/createPersonModal.js",["142","143","144"],{"ruleId":"145","replacedBy":"146"},{"ruleId":"147","replacedBy":"148"},{"ruleId":"149","severity":1,"message":"150","line":1,"column":27,"nodeType":"151","messageId":"152","endLine":1,"endColumn":36},{"ruleId":"149","severity":1,"message":"153","line":3,"column":10,"nodeType":"151","messageId":"152","endLine":3,"endColumn":23},{"ruleId":"154","severity":1,"message":"155","line":44,"column":6,"nodeType":"156","endLine":44,"endColumn":17,"suggestions":"157"},{"ruleId":"158","severity":1,"message":"159","line":177,"column":16,"nodeType":"160","messageId":"161","endLine":177,"endColumn":18},{"ruleId":"149","severity":1,"message":"150","line":1,"column":39,"nodeType":"151","messageId":"152","endLine":1,"endColumn":48},{"ruleId":"149","severity":1,"message":"162","line":12,"column":10,"nodeType":"151","messageId":"152","endLine":12,"endColumn":22},{"ruleId":"158","severity":1,"message":"163","line":18,"column":53,"nodeType":"160","messageId":"164","endLine":18,"endColumn":55},{"ruleId":"158","severity":1,"message":"165","line":19,"column":69,"nodeType":"160","messageId":"161","endLine":19,"endColumn":71},{"ruleId":"149","severity":1,"message":"150","line":1,"column":32,"nodeType":"151","messageId":"152","endLine":1,"endColumn":41},{"ruleId":"149","severity":1,"message":"166","line":17,"column":10,"nodeType":"151","messageId":"152","endLine":17,"endColumn":22},{"ruleId":"149","severity":1,"message":"167","line":19,"column":8,"nodeType":"151","messageId":"152","endLine":19,"endColumn":13},"no-native-reassign",["168"],"no-negated-in-lhs",["169"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'getAllPersons' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'PersonState'. Either include it or remove the dependency array.","ArrayExpression",["170"],"array-callback-return","Array.prototype.filter() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'deletePerson' is defined but never used.","Array.prototype.map() expects a return value from arrow function.","expectedInside","Array.prototype.find() expects a value to be returned at the end of arrow function.","'updatePerson' is defined but never used.","'Axios' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"171","fix":"172"},"Update the dependencies array to be: [PersonState, authState]",{"range":"173","text":"174"},[1289,1300],"[PersonState, authState]"]