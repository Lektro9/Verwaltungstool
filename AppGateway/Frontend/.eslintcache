[{"/Users/larsk/gitrepos/Verwaltungstool/AppGateway/Frontend/src/index.js":"1","/Users/larsk/gitrepos/Verwaltungstool/AppGateway/Frontend/src/RouteDefs.js":"2","/Users/larsk/gitrepos/Verwaltungstool/AppGateway/Frontend/src/reportWebVitals.js":"3","/Users/larsk/gitrepos/Verwaltungstool/AppGateway/Frontend/src/components/PersProvider.js":"4","/Users/larsk/gitrepos/Verwaltungstool/AppGateway/Frontend/src/components/PrivateRoute.js":"5","/Users/larsk/gitrepos/Verwaltungstool/AppGateway/Frontend/src/components/MannProvider.js":"6","/Users/larsk/gitrepos/Verwaltungstool/AppGateway/Frontend/src/components/TurnierProvider.js":"7","/Users/larsk/gitrepos/Verwaltungstool/AppGateway/Frontend/src/pages/TurnierVerwaltung/TurnierVerwaltungsPage.js":"8","/Users/larsk/gitrepos/Verwaltungstool/AppGateway/Frontend/src/pages/LoginPage.js":"9","/Users/larsk/gitrepos/Verwaltungstool/AppGateway/Frontend/src/pages/PersonenVerwaltung/PersonenVerwaltungsPage.js":"10","/Users/larsk/gitrepos/Verwaltungstool/AppGateway/Frontend/src/pages/MannschaftsVerwaltung/MannschaftsVerwaltungsPage.js":"11","/Users/larsk/gitrepos/Verwaltungstool/AppGateway/Frontend/src/components/AuthButton.js":"12","/Users/larsk/gitrepos/Verwaltungstool/AppGateway/Frontend/src/components/AuthProvider.js":"13","/Users/larsk/gitrepos/Verwaltungstool/AppGateway/Frontend/src/pages/UserCreationPage.js":"14","/Users/larsk/gitrepos/Verwaltungstool/AppGateway/Frontend/src/pages/TurnierVerwaltung/selectTeamsAndPoints.js":"15","/Users/larsk/gitrepos/Verwaltungstool/AppGateway/Frontend/src/components/ChoosingTable.js":"16","/Users/larsk/gitrepos/Verwaltungstool/AppGateway/Frontend/src/pages/TurnierVerwaltung/createTurnierModal.js":"17","/Users/larsk/gitrepos/Verwaltungstool/AppGateway/Frontend/src/hooks/usePerson.js":"18","/Users/larsk/gitrepos/Verwaltungstool/AppGateway/Frontend/src/hooks/useAuth.js":"19","/Users/larsk/gitrepos/Verwaltungstool/AppGateway/Frontend/src/hooks/useTurnier.js":"20","/Users/larsk/gitrepos/Verwaltungstool/AppGateway/Frontend/src/hooks/useMannschaft.js":"21","/Users/larsk/gitrepos/Verwaltungstool/AppGateway/Frontend/src/pages/PersonenVerwaltung/addPerson.js":"22","/Users/larsk/gitrepos/Verwaltungstool/AppGateway/Frontend/src/pages/MannschaftsVerwaltung/addMannschaftModal.js":"23","/Users/larsk/gitrepos/Verwaltungstool/AppGateway/Frontend/src/pages/PersonenVerwaltung/dataTablePerson.js":"24","/Users/larsk/gitrepos/Verwaltungstool/AppGateway/Frontend/src/pages/PersonenVerwaltung/editPerson.js":"25","/Users/larsk/gitrepos/Verwaltungstool/AppGateway/Frontend/src/pages/PersonenVerwaltung/addPersonComps/createPersonModal.js":"26","/Users/larsk/gitrepos/Verwaltungstool/AppGateway/Frontend/src/pages/PersonenVerwaltung/addPersonComps/overviewPersonData.js":"27","/Users/larsk/gitrepos/Verwaltungstool/AppGateway/Frontend/src/pages/PersonenVerwaltung/addPersonComps/formPersonSpecific.js":"28","/Users/larsk/gitrepos/Verwaltungstool/AppGateway/Frontend/src/pages/PersonenVerwaltung/addPersonComps/formPersonGeneral.js":"29","/Users/larsk/gitrepos/Verwaltungstool/AppGateway/Frontend/src/pages/PersonenVerwaltung/editPersonComps/createPersonModal.js":"30"},{"size":518,"mtime":1612772611543,"results":"31","hashOfConfig":"32"},{"size":4015,"mtime":1612876755118,"results":"33","hashOfConfig":"32"},{"size":362,"mtime":1612772611545,"results":"34","hashOfConfig":"32"},{"size":456,"mtime":1612963425583,"results":"35","hashOfConfig":"32"},{"size":530,"mtime":1612772611542,"results":"36","hashOfConfig":"32"},{"size":853,"mtime":1612772611541,"results":"37","hashOfConfig":"32"},{"size":1318,"mtime":1612814532574,"results":"38","hashOfConfig":"32"},{"size":11507,"mtime":1612871332702,"results":"39","hashOfConfig":"32"},{"size":3016,"mtime":1613072216686,"results":"40","hashOfConfig":"32"},{"size":1813,"mtime":1613019798307,"results":"41","hashOfConfig":"32"},{"size":7391,"mtime":1613022755193,"results":"42","hashOfConfig":"32"},{"size":1006,"mtime":1613066776346,"results":"43","hashOfConfig":"32"},{"size":1636,"mtime":1613066691492,"results":"44","hashOfConfig":"32"},{"size":2726,"mtime":1613066874063,"results":"45","hashOfConfig":"32"},{"size":3009,"mtime":1612861090778,"results":"46","hashOfConfig":"32"},{"size":2308,"mtime":1612772611541,"results":"47","hashOfConfig":"32"},{"size":794,"mtime":1612772611545,"results":"48","hashOfConfig":"32"},{"size":85,"mtime":1612772611542,"results":"49","hashOfConfig":"32"},{"size":158,"mtime":1612772611542,"results":"50","hashOfConfig":"32"},{"size":86,"mtime":1612772611542,"results":"51","hashOfConfig":"32"},{"size":90,"mtime":1612772611542,"results":"52","hashOfConfig":"32"},{"size":678,"mtime":1612820911757,"results":"53","hashOfConfig":"32"},{"size":3652,"mtime":1612864842006,"results":"54","hashOfConfig":"32"},{"size":3257,"mtime":1613019798308,"results":"55","hashOfConfig":"32"},{"size":706,"mtime":1612939505801,"results":"56","hashOfConfig":"32"},{"size":4587,"mtime":1613019798308,"results":"57","hashOfConfig":"32"},{"size":546,"mtime":1612820911758,"results":"58","hashOfConfig":"32"},{"size":2548,"mtime":1612820911758,"results":"59","hashOfConfig":"32"},{"size":2235,"mtime":1612820911758,"results":"60","hashOfConfig":"32"},{"size":9065,"mtime":1613019798308,"results":"61","hashOfConfig":"32"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},"1fkd723",{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"64"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"64"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"64"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"64"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"64"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"64"},"/Users/larsk/gitrepos/Verwaltungstool/AppGateway/Frontend/src/index.js",[],["129","130"],"/Users/larsk/gitrepos/Verwaltungstool/AppGateway/Frontend/src/RouteDefs.js",[],"/Users/larsk/gitrepos/Verwaltungstool/AppGateway/Frontend/src/reportWebVitals.js",[],"/Users/larsk/gitrepos/Verwaltungstool/AppGateway/Frontend/src/components/PersProvider.js",["131"],"import React, { useState, useEffect } from \"react\";\nimport { usePersons } from \"../hooks/usePerson\";\n\nexport const PersProvider = (props) => {\n  const setPersons = (PersonArr) => {\n    setState({ ...state, persons: PersonArr });\n  };\n\n\n  const initState = {\n    persons: [],\n    setPersons: setPersons,\n  };\n\n  const [state, setState] = useState(initState);\n\n  return (\n    <usePersons.Provider value={state}>{props.children}</usePersons.Provider>\n  );\n};\n","/Users/larsk/gitrepos/Verwaltungstool/AppGateway/Frontend/src/components/PrivateRoute.js",[],"/Users/larsk/gitrepos/Verwaltungstool/AppGateway/Frontend/src/components/MannProvider.js",[],"/Users/larsk/gitrepos/Verwaltungstool/AppGateway/Frontend/src/components/TurnierProvider.js",[],"/Users/larsk/gitrepos/Verwaltungstool/AppGateway/Frontend/src/pages/TurnierVerwaltung/TurnierVerwaltungsPage.js",["132"],"import {\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  Container,\n  Dialog,\n  DialogContent,\n  DialogTitle,\n  Divider,\n  Paper,\n  Typography,\n} from '@material-ui/core';\nimport { useContext, useState, useEffect } from 'react';\nimport { ChoosingTable } from '../../components/ChoosingTable';\nimport { useMannschaften } from '../../hooks/useMannschaft';\nimport { useTurniere } from '../../hooks/useTurnier';\nimport { CreateTurnierModal } from './createTurnierModal';\nimport { SelectTeamsAndPoints } from './selectTeamsAndPoints';\nimport axios from 'axios';\nimport { useAuth } from '../../hooks/useAuth';\n\nconst BASE_URL_TURNIER = \"http://localhost:3007\";\nconst BASE_URL_MANNSCHAFTEN = \"http://localhost:3006\";\n\nexport const TurnierVerwaltungsPage = () => {\n  const authState = useContext(useAuth);\n  const TurniereState = useContext(useTurniere);\n  const MannschaftenState = useContext(useMannschaften);\n  const [open, setOpen] = useState(false);\n  const [turnierRemoveMannModals, setTurnierRemoveMannModals] = useState(\n    TurniereState.turniere.reduce((accumulator, currentValue) => {\n      return { ...accumulator, [currentValue.id]: false };\n    }, {})\n  );\n  const [turnierAddMannModals, setTurnierAddMannModals] = useState(\n    TurniereState.turniere.reduce((accumulator, currentValue) => {\n      return { ...accumulator, [currentValue.id]: false };\n    }, {})\n  );\n\n  // Daten werden einmal beim Aufruf der Seite geholt\n  useEffect(() => {\n    axios\n      .get(BASE_URL_MANNSCHAFTEN + '/getMannschaften')\n      .then(function (response) {\n        MannschaftenState.setMannschaften(response.data);\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n    axios\n      .get(BASE_URL_TURNIER + '/getTurniere')\n      .then(function (response) {\n        TurniereState.setTurniere([...response.data]);\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  // update the boolean collection object so modal booleans are tracked correctly\n  useEffect(() => {\n    setTurnierRemoveMannModals(TurniereState.turniere.reduce((accumulator, currentValue) => {\n      return { ...accumulator, [currentValue.id]: false };\n    }, {}))\n    setTurnierAddMannModals(TurniereState.turniere.reduce((accumulator, currentValue) => {\n      return { ...accumulator, [currentValue.id]: false };\n    }, {}))\n  }, [TurniereState.turniere])\n\n  const getTeamName = (teamId) => {\n    const teamName = MannschaftenState.mannschaften.find(\n      (team) => team.id === teamId\n    )?.name;\n    return teamName || 'Team not Found';\n  };\n  const getTeamsFromIds = (teilnehmer) => {\n    const teamsInTourney = [];\n    if (teilnehmer && teilnehmer.length > 0) {\n      teilnehmer.forEach((team) => {\n        MannschaftenState.mannschaften.forEach((mannschaft) => {\n\n          if (mannschaft.id === team.mannschaftID) {\n            teamsInTourney.push(mannschaft);\n          }\n        });\n      });\n    }\n    return teamsInTourney;\n  };\n  const addTurnier = (newTurnier) => {\n    axios\n      .post(BASE_URL_TURNIER + '/createTurnier', newTurnier)\n      .then(function (response) {\n        TurniereState.setTurniere([\n          ...TurniereState.turniere,\n          response.data,\n        ]);\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n    TurniereState.setTurniere([newTurnier, ...TurniereState.turniere]);\n  };\n  const deleteTurnier = (turnier) => {\n    axios\n      .delete(BASE_URL_TURNIER + '/deleteTurnier/' + turnier.id)\n      .then(function (response) {\n        const indexOfGame = TurniereState.turniere.indexOf(turnier);\n        if (indexOfGame > -1) {\n          TurniereState.turniere.splice(indexOfGame, 1);\n        }\n        TurniereState.setTurniere([...TurniereState.turniere]);\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const addGame = (game) => {\n    axios\n      .post(BASE_URL_TURNIER + '/addSpielToTurnier', { turnierID: game.turnierId, game: game })\n      .then(function (response) {\n        const turnier = TurniereState.turniere.find(\n          (turnier) => turnier.id === response.data.id\n        );\n        turnier.games = response.data.games;\n\n        TurniereState.setTurniere([...TurniereState.turniere]);\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n  };\n\n  const removeTeamsFromTurnier = (\n    teamIds,\n    teamsAlreadyInTurnier = [],\n    turnier\n  ) => {\n    axios\n      .delete(BASE_URL_TURNIER + '/removeTeilnehmerFromTurnier', { data: { turnierID: turnier.id, teilnehmerIDs: teamIds } })\n      .then(function (response) {\n        turnier.teilnehmer = response.data.teilnehmer\n        turnier.games = response.data.games\n        TurniereState.setTurniere([\n          ...TurniereState.turniere\n        ]);\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n  };\n\n  const addTeamsToTurnier = (\n    selectedTeamIds,\n    teamsAlreadyInTurnier = [],\n    turnier = {}\n  ) => {\n\n    //find duplicates, so they won't be added twice\n    const teamsIdsAlreadyInTurnier = [];\n    teamsAlreadyInTurnier.forEach((teamInTurnier) => {\n      selectedTeamIds.forEach((teamId) => {\n        if (teamInTurnier.mannschaftID === teamId) {\n          teamsIdsAlreadyInTurnier.push(teamInTurnier.mannschaftID)\n        }\n      })\n    })\n    const teamIdsNotInTurnier = selectedTeamIds.filter(\n      (teamId) => {\n        if (!teamsIdsAlreadyInTurnier.includes(teamId)) {\n          return teamId\n        }\n      }\n    );\n\n    axios\n      .post(BASE_URL_TURNIER + '/addTeilnehmerToTurnier', { turnierID: turnier.id, teilnehmerIDs: teamIdsNotInTurnier })\n      .then(function (response) {\n        turnier.teilnehmer = response.data.teilnehmer\n        TurniereState.setTurniere([\n          ...TurniereState.turniere\n        ]);\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n  };\n\n  const openAddTeam = (turnierId) => {\n    turnierAddMannModals[turnierId] = true;\n    setTurnierAddMannModals({ ...turnierAddMannModals });\n  };\n\n  const openRemoveTeam = (turnierId) => {\n    turnierRemoveMannModals[turnierId] = true;\n    setTurnierRemoveMannModals({ ...turnierRemoveMannModals });\n  };\n\n  const closeAddTeam = (turnierId) => {\n    turnierAddMannModals[turnierId] = false;\n    setTurnierAddMannModals({ ...turnierAddMannModals });\n  };\n  const closeRemoveTeam = (turnierId) => {\n    turnierRemoveMannModals[turnierId] = false;\n    setTurnierRemoveMannModals({ ...turnierRemoveMannModals });\n  };\n  const deleteGame = (turnier, game) => {\n    axios\n      .delete(BASE_URL_TURNIER + '/removeSpielFromTurnier/' + game.id)\n      .then(function (response) {\n        const indexOfGame = turnier.games.indexOf(game);\n        if (indexOfGame > -1) {\n          turnier.games.splice(indexOfGame, 1);\n        }\n        TurniereState.setTurniere([...TurniereState.turniere]);\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n  };\n\n  return (\n    <>\n      {authState.user.role ? <Button\n        variant='outlined'\n        color='primary'\n        onClick={() => {\n          setOpen(true);\n        }}\n      >\n        Turnier hinzufügen\n      </Button> : ''}\n      <Dialog open={open} onClose={handleClose}>\n        <DialogTitle id='createTurnier' onClose={handleClose}>\n          Turnier hinzufügen\n        </DialogTitle>\n        <DialogContent>\n          <CreateTurnierModal addTurnier={addTurnier} />\n        </DialogContent>\n      </Dialog>\n      <Container maxWidth='md'>\n        {TurniereState.turniere.map((turnier) => (\n          <Card style={{ width: '100%', margin: 10 }} key={turnier.id}>\n            <CardContent>\n              <Typography gutterBottom variant='h5' component='h2'>\n                {turnier.name}\n              </Typography>\n              {authState.user.role ? <>\n                <Button\n                  size='small'\n                  color='primary'\n                  onClick={() => {\n                    openAddTeam(turnier.id);\n                  }}\n                >\n                  Mannschaften hinzufügen\n                </Button>\n                <Button\n                  size='small'\n                  color='secondary'\n                  onClick={() => {\n                    openRemoveTeam(turnier.id);\n                  }}\n                >\n\n                  Mannschaften entfernen\n              </Button>\n              </> : ''}\n              {turnier.games.map((game) => (\n                <div style={{ display: 'flex' }} key={game.id}>\n                  <Paper\n                    elevation={1}\n                    style={{\n                      padding: 10,\n                      margin: 10,\n                      flexBasis: 0,\n                      flexGrow: 1,\n                      textAlign: 'center',\n                    }}\n                  >\n                    {getTeamName(game.team1Id)} - {game.team1Punkte}\n                  </Paper>\n                  <Paper\n                    elevation={1}\n                    style={{\n                      padding: 10,\n                      margin: 10,\n                      flexBasis: 0,\n                      flexGrow: 1,\n                      textAlign: 'center',\n                    }}\n                  >\n                    {game.team2Punkte} - {getTeamName(game.team2Id)}\n                  </Paper>\n                  {authState.user.role ? <Button\n                    style={{ height: '40%', marginTop: 15 }}\n                    size='small'\n                    variant='contained'\n                    color='secondary'\n                    onClick={() => {\n                      deleteGame(turnier, game);\n                    }}\n                  >\n                    X\n                  </Button> : ''}\n                </div>\n              ))}\n              <Divider style={{ marginTop: 20 }} />\n              {authState.user.role ? <SelectTeamsAndPoints turnier={turnier} addGame={addGame} /> : ''}\n            </CardContent>\n            {authState.user.role ? <CardActions>\n              <Button\n                size='small'\n                color='secondary'\n                onClick={() => {\n                  deleteTurnier(turnier);\n                }}\n              >\n                Turnier Löschen\n              </Button>\n            </CardActions> : ''}\n            <Dialog\n              open={turnierRemoveMannModals[turnier.id]}\n              onClose={() => {\n                closeRemoveTeam(turnier.id);\n              }}\n            >\n              <ChoosingTable\n                title={'Mannschaften entfernen'}\n                teams={getTeamsFromIds(turnier.teilnehmer)}\n                action={removeTeamsFromTurnier}\n                turnier={turnier}\n                buttonInfo={['secondary', 'entfernen']}\n              />\n            </Dialog>\n            <Dialog\n              open={turnierAddMannModals[turnier.id]}\n              onClose={() => {\n                closeAddTeam(turnier.id);\n              }}\n            >\n              <ChoosingTable\n                title={'Mannschaften hinzufügen'}\n                teams={MannschaftenState.mannschaften}\n                teamsAlreadyInTurnier={turnier.teilnehmer}\n                action={addTeamsToTurnier}\n                turnier={turnier}\n                buttonInfo={['primary', 'hinzufügen']}\n              />\n            </Dialog>\n          </Card>\n        ))}\n      </Container>\n    </>\n  );\n};\n","/Users/larsk/gitrepos/Verwaltungstool/AppGateway/Frontend/src/pages/LoginPage.js",[],"/Users/larsk/gitrepos/Verwaltungstool/AppGateway/Frontend/src/pages/PersonenVerwaltung/PersonenVerwaltungsPage.js",["133"],"import { useContext, useEffect, useState } from \"react\";\n\n/*---Material---*/\nimport { Button } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n/*---Components---*/\nimport DataTablePerson from \"./dataTablePerson\";\nimport AddPerson from \"./addPerson\";\nimport { useAuth } from \"../../hooks/useAuth\";\nimport { usePersons } from \"../../hooks/usePerson\";\nimport axios from \"axios\";\n\nconst useStyles = makeStyles({\n  root: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    flexDirection: \"column\",\n    alignItems: \"center\"\n  },\n  buttons: {\n    marginBottom: \"1em\"\n  }\n});\n\nconst BASE_URL_PERSONEN = process.env.BASE_URL_PERSONEN || \"http://localhost:3004/api/v1/personenverwaltung/persons/\";\n\nexport const PersonenVeraltungsPage = () => {\n  const authState = useContext(useAuth);\n  const classes = useStyles();\n  const [open, setOpen] = useState(false);\n  const PersonState = useContext(usePersons);\n\n  useEffect(() => {\n    axios.defaults.headers.common['Authorization'] = 'Bearer ' + authState.accessToken; // for all requests\n    axios\n      .get(BASE_URL_PERSONEN)\n      .then((response) => {\n        PersonState.setPersons(response.data);\n      })\n      .catch(function (error) {\n        console.error(error);\n      });\n  }, [authState]);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <div className={classes.root}>\n      <h2>Personenverwaltung</h2>\n      {authState.user.role ? <div className={classes.buttons}>\n        <Button variant=\"contained\" color=\"primary\" onClick={handleClickOpen}>\n          Person Erstellen\n        </Button>\n      </div> : ''}\n\n      <DataTablePerson />\n      {/* DialogWindow */}\n      <AddPerson onClick={handleClose} dialogState={open} />\n    </div>\n  );\n};\n","/Users/larsk/gitrepos/Verwaltungstool/AppGateway/Frontend/src/pages/MannschaftsVerwaltung/MannschaftsVerwaltungsPage.js",[],"/Users/larsk/gitrepos/Verwaltungstool/AppGateway/Frontend/src/components/AuthButton.js",[],"/Users/larsk/gitrepos/Verwaltungstool/AppGateway/Frontend/src/components/AuthProvider.js",[],"/Users/larsk/gitrepos/Verwaltungstool/AppGateway/Frontend/src/pages/UserCreationPage.js",[],"/Users/larsk/gitrepos/Verwaltungstool/AppGateway/Frontend/src/pages/TurnierVerwaltung/selectTeamsAndPoints.js",["134","135"],"import {\n  Button,\n  FormControl,\n  InputLabel,\n  MenuItem,\n  Select,\n  TextField,\n} from '@material-ui/core';\nimport { useContext, useState } from 'react';\nimport { useMannschaften } from '../../hooks/useMannschaft';\n\nexport const SelectTeamsAndPoints = (props) => {\n  //this should only be the teams playing in the tourney\n  const MannschaftenState = useContext(useMannschaften);\n\n  const teamsInTournament = () => {\n    const teamsInTournament = []\n    props.turnier?.teilnehmer?.map((teilnehmerTeam) => {\n      const returnTeam = MannschaftenState.mannschaften.find((team) => {\n        if (team.id === teilnehmerTeam.mannschaftID) {\n          return team;\n        }\n      });\n      if (returnTeam)\n        teamsInTournament.push(returnTeam)\n    });\n    return (teamsInTournament)\n  }\n  const [team1Id, setTeam1Id] = useState(\"\");\n  const [team1Points, setTeam1Points] = useState(0);\n  const [team2Id, setTeam2Id] = useState(\"\");\n  const [team2Points, setTeam2Points] = useState(0);\n  return (\n    <>\n      <FormControl style={{ width: '35%' }}>\n        <InputLabel id='team1'>Team 1</InputLabel>\n        <Select\n          labelId='team1'\n          id='simple-team1'\n          value={team1Id}\n          onChange={(event) => {\n            setTeam1Id(event.target.value);\n          }}\n        >\n          {teamsInTournament().length > 0 && teamsInTournament().map((team) => {\n            return (\n              <MenuItem value={team.id} key={team.id}>\n                {team.name}\n              </MenuItem>\n            );\n          })}\n        </Select>\n      </FormControl>\n      <TextField\n        style={{ width: '5%', marginLeft: 10 }}\n        id='standard-number'\n        label='Pts'\n        type='number'\n        onChange={(event) => {\n          setTeam1Points(event.target.value);\n        }}\n      />\n      <TextField\n        style={{ width: '5%', marginLeft: 40 }}\n        id='standard-number'\n        label='Pts'\n        type='number'\n        onChange={(event) => {\n          setTeam2Points(event.target.value);\n        }}\n      />\n      <FormControl style={{ width: '35%', marginLeft: 10 }}>\n        <InputLabel id='team2'>Team 2</InputLabel>\n        <Select\n          labelId='team2'\n          id='simple-team2'\n          value={team2Id}\n          onChange={(event) => {\n            setTeam2Id(event.target.value);\n          }}\n        >\n          {teamsInTournament().length > 0 && teamsInTournament().map((team) => {\n            return (\n              <MenuItem value={team.id} key={team.id}>\n                {team.name}\n              </MenuItem>\n            );\n          })}\n        </Select>\n      </FormControl>\n      <Button\n        color='primary'\n        onClick={() => {\n          props.addGame({\n            id: Math.floor(Math.random() * 1000),\n            turnierId: props.turnier.id,\n            team1Id,\n            team1Punkte: team1Points,\n            team2Id,\n            team2Punkte: team2Points,\n          });\n        }}\n      >\n        add Match\n      </Button>\n    </>\n  );\n};\n","/Users/larsk/gitrepos/Verwaltungstool/AppGateway/Frontend/src/components/ChoosingTable.js",[],"/Users/larsk/gitrepos/Verwaltungstool/AppGateway/Frontend/src/pages/TurnierVerwaltung/createTurnierModal.js",[],"/Users/larsk/gitrepos/Verwaltungstool/AppGateway/Frontend/src/hooks/usePerson.js",[],"/Users/larsk/gitrepos/Verwaltungstool/AppGateway/Frontend/src/hooks/useAuth.js",[],"/Users/larsk/gitrepos/Verwaltungstool/AppGateway/Frontend/src/hooks/useTurnier.js",[],"/Users/larsk/gitrepos/Verwaltungstool/AppGateway/Frontend/src/hooks/useMannschaft.js",[],"/Users/larsk/gitrepos/Verwaltungstool/AppGateway/Frontend/src/pages/PersonenVerwaltung/addPerson.js",[],"/Users/larsk/gitrepos/Verwaltungstool/AppGateway/Frontend/src/pages/MannschaftsVerwaltung/addMannschaftModal.js",[],"/Users/larsk/gitrepos/Verwaltungstool/AppGateway/Frontend/src/pages/PersonenVerwaltung/dataTablePerson.js",["136"],"import React, { useState, useContext, useEffect } from \"react\";\nimport axios from \"axios\";\n\n/*---Material---*/\nimport { Container } from \"@material-ui/core\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport { DataGrid } from \"@material-ui/data-grid\";\nimport { usePersons } from \"../../hooks/usePerson\";\n\nimport EditPerson from \"./editPerson\";\nimport { useAuth } from \"../../hooks/useAuth\";\nconst BASE_URL_PERSONEN = process.env.BASE_URL_PERSONEN || \"http://localhost:3004/api/v1/personenverwaltung/persons/\";\n\nconst DataTablePerson = () => {\n  const authState = useContext(useAuth);\n  const PersonState = useContext(usePersons);\n\n  const [open, setOpen] = useState(false);\n  const [personId, setPersonId] = useState(0);\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const columns = [\n    { field: \"id\", headerName: \"ID\", width: 70 },\n    { field: \"type\", headerName: \"Type\", width: 130 },\n    { field: \"firstName\", headerName: \"Vorname\", width: 130 },\n    { field: \"lastName\", headerName: \"Nachname\", width: 130 },\n    {\n      field: \"birthday\",\n      headerName: \"Geburtstag\",\n      type: \"date\",\n      width: 150,\n      valueFormatter: (params) => new Date(params.value).toLocaleDateString(),\n    },\n    {\n      field: \"fullName\",\n      headerName: \"Full name\",\n      description: \"This column has a value getter and is not sortable.\",\n      sortable: false,\n      width: 180,\n      valueGetter: (params) =>\n        `${params.getValue(\"firstName\") || \"\"} ${params.getValue(\"lastName\") || \"\"\n        }`,\n    },\n    {\n      field: \"delete\",\n      headerName: \"Löschen\",\n\n      renderCell: (params) => {\n        if (authState.user.role) {\n          return (\n            <IconButton\n              aria-label=\"delete\"\n              onClick={() => {\n                deletePer(params.getValue(\"id\"));\n              }}\n            >\n              <DeleteIcon />\n            </IconButton>\n          );\n        }\n      },\n    },\n    {\n      field: \"edit\",\n      headerName: \"Editieren\",\n\n      renderCell: (params) => {\n        if (authState.user.role) {\n          return (\n            <IconButton\n              aria-label=\"edit\"\n              onClick={() => {\n                editPer(params.getValue(\"id\"));\n              }}\n            >\n              <EditIcon />\n            </IconButton>\n          );\n        }\n      },\n    },\n  ];\n\n  const deletePer = (id) => {\n    axios\n      .delete(BASE_URL_PERSONEN + id)\n      .then(() => {\n        PersonState.setPersons(\n          PersonState.persons.filter((person) => person.id !== id)\n        );\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  };\n\n  const editPer = (id) => {\n    setPersonId(id);\n    setOpen(true);\n  };\n\n  return (\n    <Container>\n      <div\n        style={{\n          width: \"100%\",\n          height: 500,\n        }}\n      >\n        <DataGrid rows={PersonState.persons} columns={columns} pageSize={10} />\n      </div>\n      <EditPerson\n        onClick={handleClose}\n        dialogState={open}\n        person={PersonState.persons.filter((person) => person.id === personId)}\n      />\n    </Container>\n  );\n};\n\nexport default DataTablePerson;\n","/Users/larsk/gitrepos/Verwaltungstool/AppGateway/Frontend/src/pages/PersonenVerwaltung/editPerson.js",[],"/Users/larsk/gitrepos/Verwaltungstool/AppGateway/Frontend/src/pages/PersonenVerwaltung/addPersonComps/createPersonModal.js",[],"/Users/larsk/gitrepos/Verwaltungstool/AppGateway/Frontend/src/pages/PersonenVerwaltung/addPersonComps/overviewPersonData.js",[],"/Users/larsk/gitrepos/Verwaltungstool/AppGateway/Frontend/src/pages/PersonenVerwaltung/addPersonComps/formPersonSpecific.js",[],"/Users/larsk/gitrepos/Verwaltungstool/AppGateway/Frontend/src/pages/PersonenVerwaltung/addPersonComps/formPersonGeneral.js",[],"/Users/larsk/gitrepos/Verwaltungstool/AppGateway/Frontend/src/pages/PersonenVerwaltung/editPersonComps/createPersonModal.js",["137","138"],"import { useState, useContext, useEffect } from \"react\";\nimport axios from \"axios\";\n/*---Material---*/\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport {\n  Button,\n  Stepper,\n  Typography,\n  Step,\n  StepLabel,\n  TextField,\n  FormControl,\n} from \"@material-ui/core\";\nimport ErrorIcon from \"@material-ui/icons/Error\";\n\n/*---Comps---*/\nimport { usePersons } from \"../../../hooks/usePerson\";\nimport Axios from \"axios\";\n\nconst useStyles = makeStyles({\n  main: {\n    width: \"100%\",\n  },\n  root: {\n    display: \"flex\",\n    flexDirection: \"column\",\n  },\n  formControl: {\n    margin: \"5px 10px\",\n    width: \"60ch\",\n  },\n});\n\nconst getSteps = () => {\n  return [\"Personendaten\", \"Typdaten\"];\n};\n\nconst BASE_URL_PERSONEN =\n  process.env.BASE_URL_PERSONEN ||\n  \"http://localhost:3004/api/v1/personenverwaltung/persons/\";\n\nconst CreatePersonModal = ({ handleDialogClose, person }) => {\n  const classes = useStyles();\n  const personState = useContext(usePersons);\n  const personSpecificKeys = {\n    fussballspieler: \"fieldPosition\",\n    handballspieler: \"fieldPosition\",\n    tennisspieler: \"handedness\",\n    trainer: \"experience\",\n    physiotherapeut: \"treatmentType\",\n  };\n\n  const translation = {\n    fieldPosition: \"Position\",\n    handedness: \"Handigkeit\",\n    experience: \"Erfahrung\",\n    treatmentType: \"Therapiemethode\",\n  };\n\n  const [firstName, setFirstName] = useState(person[0].firstName);\n  const [lastName, setLastName] = useState(person[0].lastName);\n  const [birthday, setBirthday] = useState(\n    new Date(person[0].birthday).toISOString().split(\"T\")[0]\n  );\n  const [specific, setSpecific] = useState(\n    person[0][person[0].type][personSpecificKeys[person[0].type]]\n  );\n\n  const [activeStep, setActiveStep] = useState(0);\n  const steps = getSteps();\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    let updated = {\n      type: person[0].type,\n      firstName: firstName,\n      lastName: lastName,\n      birthday: new Date(birthday).getTime(),\n    };\n    updated[personSpecificKeys[person[0].type]] = specific;\n\n    axios\n      .put(BASE_URL_PERSONEN + person[0].id, updated)\n      .then((response) => {\n        if (response.status === 200) {\n          personState.persons.forEach((p) => {\n            if (p.id === person[0].id) {\n              p.firstName = response.data.firstName;\n              p.lastName = response.data.lastName;\n              p.birthday = response.data.birthday;\n              p[p.type][personSpecificKeys[person[0].type]] =\n                response.data[person[0].type][\n                  personSpecificKeys[person[0].type]\n                ];\n              personState.setPersons([...personState.persons]);\n            }\n          });\n        }\n      })\n      .catch(function (error) {\n        console.error(error);\n      });\n\n    handleDialogClose();\n  };\n\n  const handleNext = () => {\n    setActiveStep((prevActiveStep) => prevActiveStep + 1);\n  };\n\n  const handleReset = () => {\n    setFirstName(person[0].firstName);\n    setLastName(person[0].lastName);\n    setBirthday(new Date(person[0].birthday).toISOString().split(\"T\")[0]);\n    setSpecific(person[0][person[0].type][personSpecificKeys[person[0].type]]);\n    setActiveStep(0);\n  };\n\n  const getStepContent = (step) => {\n    switch (step) {\n      case 0:\n        return (\n          <div className={classes.root}>\n            <FormControl className={classes.formControl}>\n              <TextField\n                variant=\"outlined\"\n                required\n                id=\"firstName\"\n                label=\"Vorname\"\n                name=\"firstName\"\n                autoFocus\n                value={firstName}\n                onInput={(e) => {\n                  setFirstName(e.target.value);\n                }}\n              />\n            </FormControl>\n            <FormControl className={classes.formControl}>\n              <TextField\n                variant=\"outlined\"\n                required\n                name=\"lastName\"\n                label=\"Nachname\"\n                id=\"lastName\"\n                value={lastName}\n                onInput={(e) => {\n                  setLastName(e.target.value);\n                }}\n              />\n            </FormControl>\n            <FormControl className={classes.formControl}>\n              <TextField\n                variant=\"outlined\"\n                required\n                name=\"birthday\"\n                id=\"birthday\"\n                fullWidth\n                type=\"date\"\n                value={birthday}\n                onInput={(e) => {\n                  setBirthday(e.target.value);\n                }}\n              />\n            </FormControl>\n          </div>\n        );\n      case 1:\n        switch (person[0].type) {\n          case \"fussballspieler\":\n            return (\n              <FormControl className={classes.formControl}>\n                <TextField\n                  variant=\"outlined\"\n                  required\n                  name=\"fieldPosition\"\n                  label=\"Spielposition\"\n                  id=\"fussballfieldPosition\"\n                  value={specific}\n                  onInput={(e) => {\n                    setSpecific(e.target.value);\n                  }}\n                />\n              </FormControl>\n            );\n\n          case \"handballspieler\":\n            return (\n              <FormControl className={classes.formControl}>\n                <TextField\n                  variant=\"outlined\"\n                  required\n                  name=\"fieldPosition\"\n                  label=\"Spielposition\"\n                  id=\"handballfieldPosition\"\n                  value={specific}\n                  onInput={(e) => {\n                    setSpecific(e.target.value);\n                  }}\n                />\n              </FormControl>\n            );\n\n          case \"tennisspieler\":\n            return (\n              <FormControl className={classes.formControl}>\n                <TextField\n                  variant=\"outlined\"\n                  required\n                  name=\"handedness\"\n                  label=\"Händigkeit\"\n                  id=\"handedness\"\n                  value={specific}\n                  onInput={(e) => {\n                    setSpecific(e.target.value);\n                  }}\n                />\n              </FormControl>\n            );\n\n          case \"trainer\":\n            return (\n              <FormControl className={classes.formControl}>\n                <TextField\n                  variant=\"outlined\"\n                  required\n                  type=\"number\"\n                  name=\"experience\"\n                  label=\"Erfahrung\"\n                  id=\"experience\"\n                  value={specific}\n                  onInput={(e) => {\n                    setSpecific(e.target.value);\n                  }}\n                />\n              </FormControl>\n            );\n\n          case \"physiotherapeut\":\n            return (\n              <FormControl className={classes.formControl}>\n                <TextField\n                  variant=\"outlined\"\n                  required\n                  name=\"treatmentType\"\n                  label=\"Behandlungsmethode\"\n                  id=\"treatmentType\"\n                  value={specific}\n                  onInput={(e) => {\n                    setSpecific(e.target.value);\n                  }}\n                />\n              </FormControl>\n            );\n          default:\n            return <div>Wrong Persontype</div>;\n        }\n      default:\n        return (\n          <div>\n            <ErrorIcon />\n            Unknown step\n          </div>\n        );\n    }\n  };\n\n  return (\n    <div className={classes.main}>\n      <Stepper activeStep={activeStep}>\n        {steps.map((label) => {\n          const stepProps = {};\n          const labelProps = {};\n\n          return (\n            <Step key={label} {...stepProps}>\n              <StepLabel {...labelProps}>{label}</StepLabel>\n            </Step>\n          );\n        })}\n      </Stepper>\n      <div>\n        {activeStep === steps.length ? (\n          <div>\n            <Typography className={classes.instructions}>\n              <div>\n                Type: {person[0].type} <br />\n                Vorname: {firstName} <br />\n                Nachname: {lastName} <br />\n                Geburtstag: {birthday} <br />\n                {translation[personSpecificKeys[person[0].type]]}: {specific}\n              </div>\n            </Typography>\n            <Button onClick={handleReset} className={classes.button}>\n              Reset\n            </Button>\n            <Button variant=\"contained\" color=\"primary\" onClick={handleSubmit}>\n              Hinzufügen\n            </Button>\n          </div>\n        ) : (\n          <div>\n            <Typography className={classes.instructions}>\n              {getStepContent(activeStep)}\n            </Typography>\n            <div>\n              <Button variant=\"contained\" color=\"primary\" onClick={handleNext}>\n                Weiter\n              </Button>\n            </div>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default CreatePersonModal;\n",{"ruleId":"139","replacedBy":"140"},{"ruleId":"141","replacedBy":"142"},{"ruleId":"143","severity":1,"message":"144","line":1,"column":27,"nodeType":"145","messageId":"146","endLine":1,"endColumn":36},{"ruleId":"147","severity":1,"message":"148","line":177,"column":16,"nodeType":"149","messageId":"150","endLine":177,"endColumn":18},{"ruleId":"151","severity":1,"message":"152","line":43,"column":6,"nodeType":"153","endLine":43,"endColumn":17,"suggestions":"154"},{"ruleId":"147","severity":1,"message":"155","line":18,"column":53,"nodeType":"149","messageId":"156","endLine":18,"endColumn":55},{"ruleId":"147","severity":1,"message":"157","line":19,"column":69,"nodeType":"149","messageId":"150","endLine":19,"endColumn":71},{"ruleId":"143","severity":1,"message":"144","line":1,"column":39,"nodeType":"145","messageId":"146","endLine":1,"endColumn":48},{"ruleId":"143","severity":1,"message":"144","line":1,"column":32,"nodeType":"145","messageId":"146","endLine":1,"endColumn":41},{"ruleId":"143","severity":1,"message":"158","line":18,"column":8,"nodeType":"145","messageId":"146","endLine":18,"endColumn":13},"no-native-reassign",["159"],"no-negated-in-lhs",["160"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","array-callback-return","Array.prototype.filter() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'PersonState'. Either include it or remove the dependency array.","ArrayExpression",["161"],"Array.prototype.map() expects a return value from arrow function.","expectedInside","Array.prototype.find() expects a value to be returned at the end of arrow function.","'Axios' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"162","fix":"163"},"Update the dependencies array to be: [PersonState, authState]",{"range":"164","text":"165"},[1264,1275],"[PersonState, authState]"]