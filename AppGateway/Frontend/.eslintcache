[{"C:\\gitrepos\\Verwaltungstool\\AppGateway\\Frontend\\src\\index.js":"1","C:\\gitrepos\\Verwaltungstool\\AppGateway\\Frontend\\src\\reportWebVitals.js":"2","C:\\gitrepos\\Verwaltungstool\\AppGateway\\Frontend\\src\\RouteDefs.js":"3","C:\\gitrepos\\Verwaltungstool\\AppGateway\\Frontend\\src\\components\\PrivateRoute.js":"4","C:\\gitrepos\\Verwaltungstool\\AppGateway\\Frontend\\src\\components\\AuthButton.js":"5","C:\\gitrepos\\Verwaltungstool\\AppGateway\\Frontend\\src\\components\\AuthProvider.js":"6","C:\\gitrepos\\Verwaltungstool\\AppGateway\\Frontend\\src\\pages\\LoginPage.js":"7","C:\\gitrepos\\Verwaltungstool\\AppGateway\\Frontend\\src\\components\\MannProvider.js":"8","C:\\gitrepos\\Verwaltungstool\\AppGateway\\Frontend\\src\\components\\PersProvider.js":"9","C:\\gitrepos\\Verwaltungstool\\AppGateway\\Frontend\\src\\components\\TurnierProvider.js":"10","C:\\gitrepos\\Verwaltungstool\\AppGateway\\Frontend\\src\\pages\\PersonenVerwaltung\\PersonenVerwaltungsPage.js":"11","C:\\gitrepos\\Verwaltungstool\\AppGateway\\Frontend\\src\\pages\\TurnierVerwaltung\\TurnierVerwaltungsPage.js":"12","C:\\gitrepos\\Verwaltungstool\\AppGateway\\Frontend\\src\\pages\\MannschaftsVerwaltung\\MannschaftsVerwaltungsPage.js":"13","C:\\gitrepos\\Verwaltungstool\\AppGateway\\Frontend\\src\\hooks\\useAuth.js":"14","C:\\gitrepos\\Verwaltungstool\\AppGateway\\Frontend\\src\\hooks\\usePerson.js":"15","C:\\gitrepos\\Verwaltungstool\\AppGateway\\Frontend\\src\\hooks\\useMannschaft.js":"16","C:\\gitrepos\\Verwaltungstool\\AppGateway\\Frontend\\src\\hooks\\useTurnier.js":"17","C:\\gitrepos\\Verwaltungstool\\AppGateway\\Frontend\\src\\pages\\PersonenVerwaltung\\createPersonModal.js":"18","C:\\gitrepos\\Verwaltungstool\\AppGateway\\Frontend\\src\\pages\\MannschaftsVerwaltung\\createMannschaftModal.js":"19"},{"size":518,"mtime":1610552650871,"results":"20","hashOfConfig":"21"},{"size":362,"mtime":1608276293670,"results":"22","hashOfConfig":"21"},{"size":3681,"mtime":1612507397376,"results":"23","hashOfConfig":"21"},{"size":546,"mtime":1611745002401,"results":"24","hashOfConfig":"21"},{"size":869,"mtime":1611827103158,"results":"25","hashOfConfig":"21"},{"size":1057,"mtime":1611751016623,"results":"26","hashOfConfig":"21"},{"size":2867,"mtime":1611749180786,"results":"27","hashOfConfig":"21"},{"size":895,"mtime":1612507397376,"results":"28","hashOfConfig":"21"},{"size":1285,"mtime":1612507397376,"results":"29","hashOfConfig":"21"},{"size":1198,"mtime":1612507397377,"results":"30","hashOfConfig":"21"},{"size":3185,"mtime":1612507397383,"results":"31","hashOfConfig":"21"},{"size":3647,"mtime":1612507397384,"results":"32","hashOfConfig":"21"},{"size":2838,"mtime":1612507397382,"results":"33","hashOfConfig":"21"},{"size":166,"mtime":1611748960410,"results":"34","hashOfConfig":"21"},{"size":88,"mtime":1612507397378,"results":"35","hashOfConfig":"21"},{"size":93,"mtime":1612507397377,"results":"36","hashOfConfig":"21"},{"size":89,"mtime":1612507397381,"results":"37","hashOfConfig":"21"},{"size":2268,"mtime":1612507397383,"results":"38","hashOfConfig":"21"},{"size":2732,"mtime":1612507397382,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"11k5ety",{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"42"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"42"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"42"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"C:\\gitrepos\\Verwaltungstool\\AppGateway\\Frontend\\src\\index.js",[],["82","83"],"C:\\gitrepos\\Verwaltungstool\\AppGateway\\Frontend\\src\\reportWebVitals.js",[],"C:\\gitrepos\\Verwaltungstool\\AppGateway\\Frontend\\src\\RouteDefs.js",[],"C:\\gitrepos\\Verwaltungstool\\AppGateway\\Frontend\\src\\components\\PrivateRoute.js",[],"C:\\gitrepos\\Verwaltungstool\\AppGateway\\Frontend\\src\\components\\AuthButton.js",[],"C:\\gitrepos\\Verwaltungstool\\AppGateway\\Frontend\\src\\components\\AuthProvider.js",["84"],"import React, { useEffect, useState } from 'react'\r\nimport { useAuth } from '../hooks/useAuth'\r\nimport Axios from 'axios'\r\n\r\nexport const AuthProvider = (props) => {\r\n    // check if refreshToken is in httponly cookie\r\n    // you will receive a new AccessToken when cookie is set\r\n    // else you have to login again\r\n\r\n    useEffect(() => {\r\n        Axios.get(\"http://localhost:3005/token\", { withCredentials: true })\r\n            .then(function (response) {\r\n                console.log(response);\r\n                setAccessToken(response.data.accessToken);\r\n            }).catch(function (error) {\r\n                console.log(error);\r\n            })\r\n    }, [])\r\n    const setAccessToken = (accessToken) => {\r\n        setState({ ...state, accessToken: accessToken })\r\n    }\r\n\r\n    const initState = {\r\n        accessToken: \"\",\r\n        setAccessToken: setAccessToken\r\n    }\r\n\r\n    const [state, setState] = useState(initState)\r\n\r\n    return (\r\n        <useAuth.Provider value={state}>\r\n            {props.children}\r\n        </useAuth.Provider>\r\n    )\r\n}","C:\\gitrepos\\Verwaltungstool\\AppGateway\\Frontend\\src\\pages\\LoginPage.js",[],"C:\\gitrepos\\Verwaltungstool\\AppGateway\\Frontend\\src\\components\\MannProvider.js",[],"C:\\gitrepos\\Verwaltungstool\\AppGateway\\Frontend\\src\\components\\PersProvider.js",[],"C:\\gitrepos\\Verwaltungstool\\AppGateway\\Frontend\\src\\components\\TurnierProvider.js",[],"C:\\gitrepos\\Verwaltungstool\\AppGateway\\Frontend\\src\\pages\\PersonenVerwaltung\\PersonenVerwaltungsPage.js",[],"C:\\gitrepos\\Verwaltungstool\\AppGateway\\Frontend\\src\\pages\\TurnierVerwaltung\\TurnierVerwaltungsPage.js",["85","86","87","88","89","90"],"import {\r\n  Box,\r\n  Button,\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n  Container,\r\n  FormControl,\r\n  InputLabel,\r\n  MenuItem,\r\n  Paper,\r\n  Select,\r\n  Typography,\r\n} from '@material-ui/core';\r\nimport { useContext } from 'react';\r\nimport { useMannschaften } from '../../hooks/useMannschaft';\r\nimport { useTurniere } from '../../hooks/useTurnier';\r\n\r\nexport const TurnierVerwaltungsPage = () => {\r\n  const TurniereState = useContext(useTurniere);\r\n  const MannschaftenState = useContext(useMannschaften);\r\n  const handleChange = (event) => {\r\n    console.log(event);\r\n  };\r\n  const getTeamName = (teamId) => {\r\n    const teamName = MannschaftenState.mannschaften.find(\r\n      (team) => team.id === teamId\r\n    )?.name;\r\n    return teamName || 'Team not Found';\r\n  };\r\n  const addTurnier = (newTurnier) => {\r\n    TurniereState.setTurniere([...TurniereState.turniere, newTurnier]);\r\n  };\r\n  const deleteTurnier = (turnierId) => {\r\n    const newArr = TurniereState.turniere.filter(\r\n      (turnier) => turnier.id !== turnierId\r\n    );\r\n    TurniereState.setTurniere(newArr);\r\n  };\r\n  return (\r\n    <>\r\n      <Button\r\n        variant='outlined'\r\n        color='primary'\r\n        onClick={() => {\r\n          const newTourney = {\r\n            id: Math.floor(Math.random() * 1000),\r\n            name: 'TestTurnier',\r\n            teamIds: [1, 2, 3],\r\n            games: [\r\n              {\r\n                id: Math.floor(Math.random() * 1000),\r\n                team1Id: 1,\r\n                team2Id: 2,\r\n                team1Points: 5,\r\n                team2Points: 4,\r\n              },\r\n              {\r\n                id: Math.floor(Math.random() * 1000),\r\n                team1Id: 2,\r\n                team2Id: 1,\r\n                team1Points: 2,\r\n                team2Points: 3,\r\n              },\r\n            ],\r\n          };\r\n          addTurnier(newTourney);\r\n        }}\r\n      >\r\n        addTourney\r\n      </Button>\r\n      <Container maxWidth='md'>\r\n        {TurniereState.turniere.map((turnier) => (\r\n          <Card style={{ width: '100%', margin: 10 }} key={turnier.id}>\r\n            <CardContent>\r\n              <Typography gutterBottom variant='h5' component='h2'>\r\n                {turnier.name}\r\n              </Typography>\r\n\r\n              {turnier.games.map((game) => (\r\n                <div style={{ display: 'flex' }} key={game.id}>\r\n                  <Paper\r\n                    elevation={1}\r\n                    style={{\r\n                      padding: 10,\r\n                      margin: 10,\r\n                      flexBasis: 0,\r\n                      flexGrow: 1,\r\n                      textAlign: 'center',\r\n                    }}\r\n                  >\r\n                    {getTeamName(game.team1Id)} - {game.team1Points}\r\n                  </Paper>\r\n                  <Paper\r\n                    elevation={1}\r\n                    style={{\r\n                      padding: 10,\r\n                      margin: 10,\r\n                      flexBasis: 0,\r\n                      flexGrow: 1,\r\n                      textAlign: 'center',\r\n                    }}\r\n                  >\r\n                    {game.team2Points} - {getTeamName(game.team2Id)}\r\n                  </Paper>\r\n                </div>\r\n              ))}\r\n            </CardContent>\r\n            <CardActions>\r\n              <Button\r\n                size='small'\r\n                color='secondary'\r\n                onClick={() => {\r\n                  deleteTurnier(turnier.id);\r\n                }}\r\n              >\r\n                Turnier Löschen\r\n              </Button>\r\n            </CardActions>\r\n          </Card>\r\n        ))}\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n","C:\\gitrepos\\Verwaltungstool\\AppGateway\\Frontend\\src\\pages\\MannschaftsVerwaltung\\MannschaftsVerwaltungsPage.js",["91"],"import {\r\n  Button,\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n  Dialog,\r\n  DialogContent,\r\n  DialogTitle,\r\n  Typography,\r\n} from '@material-ui/core';\r\nimport { useContext, useState } from 'react';\r\nimport { useMannschaften } from '../../hooks/useMannschaft';\r\nimport { usePersons } from '../../hooks/usePerson';\r\nimport { CreateMannschaftModal } from './createMannschaftModal';\r\n\r\nexport const MannschaftsVerwaltungsPage = () => {\r\n  const PersonState = useContext(usePersons);\r\n  const MannschaftenState = useContext(useMannschaften);\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const getPerson = (personId) => {\r\n    return PersonState.persons.find((person) => person.id === personId);\r\n  };\r\n\r\n  const deleteTeam = (teamId) => {\r\n    MannschaftenState.setMannschaften(\r\n      MannschaftenState.mannschaften.filter((team) => team.id !== teamId)\r\n    );\r\n  };\r\n\r\n  const addTeam = (teamInfo) => {\r\n    //TODO: here has to happen server communication?\r\n    MannschaftenState.setMannschaften([\r\n      ...MannschaftenState.mannschaften,\r\n      teamInfo,\r\n    ]);\r\n  };\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Button\r\n        size='small'\r\n        variant='contained'\r\n        color='primary'\r\n        onClick={() => {\r\n          setOpen(true);\r\n        }}\r\n      >\r\n        Team hinzufügen\r\n      </Button>\r\n      <Dialog open={open} onClose={handleClose}>\r\n        <DialogTitle id='createPerson' onClose={handleClose}>\r\n          Neue Mannschaft\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          <CreateMannschaftModal addTeam={addTeam} />\r\n        </DialogContent>\r\n      </Dialog>\r\n      <div style={{ display: 'flex', flexWrap: 'wrap' }}>\r\n        {MannschaftenState.mannschaften.map((team) => (\r\n          <Card style={{ width: '50vh', margin: 10 }} key={team.id}>\r\n            <CardContent>\r\n              <Typography gutterBottom variant='h5' component='h2'>\r\n                {team.name}\r\n              </Typography>\r\n              {team.mitglieder.map((personId) => {\r\n                const foundPers = getPerson(personId);\r\n                if (foundPers) {\r\n                  return (\r\n                    <div key={personId}>\r\n                      {getPerson(personId).id} - {getPerson(personId).firstName}\r\n                      {getPerson(personId).lastName}\r\n                    </div>\r\n                  );\r\n                } else {\r\n                  return;\r\n                }\r\n              })}\r\n            </CardContent>\r\n            <CardActions>\r\n              <Button\r\n                size='small'\r\n                color='secondary'\r\n                onClick={() => deleteTeam(team.id)}\r\n              >\r\n                Team Löschen\r\n              </Button>\r\n            </CardActions>\r\n          </Card>\r\n        ))}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n","C:\\gitrepos\\Verwaltungstool\\AppGateway\\Frontend\\src\\hooks\\useAuth.js",[],"C:\\gitrepos\\Verwaltungstool\\AppGateway\\Frontend\\src\\hooks\\usePerson.js",[],"C:\\gitrepos\\Verwaltungstool\\AppGateway\\Frontend\\src\\hooks\\useMannschaft.js",[],"C:\\gitrepos\\Verwaltungstool\\AppGateway\\Frontend\\src\\hooks\\useTurnier.js",[],"C:\\gitrepos\\Verwaltungstool\\AppGateway\\Frontend\\src\\pages\\PersonenVerwaltung\\createPersonModal.js",[],"C:\\gitrepos\\Verwaltungstool\\AppGateway\\Frontend\\src\\pages\\MannschaftsVerwaltung\\createMannschaftModal.js",[],{"ruleId":"92","replacedBy":"93"},{"ruleId":"94","replacedBy":"95"},{"ruleId":"96","severity":1,"message":"97","line":18,"column":8,"nodeType":"98","endLine":18,"endColumn":10,"suggestions":"99"},{"ruleId":"100","severity":1,"message":"101","line":2,"column":3,"nodeType":"102","messageId":"103","endLine":2,"endColumn":6},{"ruleId":"100","severity":1,"message":"104","line":8,"column":3,"nodeType":"102","messageId":"103","endLine":8,"endColumn":14},{"ruleId":"100","severity":1,"message":"105","line":9,"column":3,"nodeType":"102","messageId":"103","endLine":9,"endColumn":13},{"ruleId":"100","severity":1,"message":"106","line":10,"column":3,"nodeType":"102","messageId":"103","endLine":10,"endColumn":11},{"ruleId":"100","severity":1,"message":"107","line":12,"column":3,"nodeType":"102","messageId":"103","endLine":12,"endColumn":9},{"ruleId":"100","severity":1,"message":"108","line":22,"column":9,"nodeType":"102","messageId":"103","endLine":22,"endColumn":21},{"ruleId":"109","severity":1,"message":"110","line":79,"column":19,"nodeType":"111","messageId":"112","endLine":79,"endColumn":26},"no-native-reassign",["113"],"no-negated-in-lhs",["114"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'setAccessToken'. Either include it or remove the dependency array.","ArrayExpression",["115"],"no-unused-vars","'Box' is defined but never used.","Identifier","unusedVar","'FormControl' is defined but never used.","'InputLabel' is defined but never used.","'MenuItem' is defined but never used.","'Select' is defined but never used.","'handleChange' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ReturnStatement","expectedReturnValue","no-global-assign","no-unsafe-negation",{"desc":"116","fix":"117"},"Update the dependencies array to be: [setAccessToken]",{"range":"118","text":"119"},[662,664],"[setAccessToken]"]